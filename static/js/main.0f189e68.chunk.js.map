{"version":3,"sources":["pictures/ErrIcon.svg","pictures/SucsessIcon.svg","pictures/logo.svg","components/Header.js","components/ProtectedRoute.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/ImagePopup.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/constants.js","utils/Api.js","utils/auth.js","components/LoginForm.js","components/Register.js","components/Login.js","components/InfoTooltip.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","location","useLocation","link","pathname","title","className","src","headerLogo","alt","loggedIn","to","email","onClick","onSignOut","ProtectedRoute","Component","component","CurrentUserContext","React","createContext","Card","currentUser","useContext","isOwn","card","owner","_id","isLiked","likes","some","el","cardDeleteButtonClassName","cardLikeButtonClassName","name","onCardClick","type","onCardLike","length","onCardDelete","Main","onEditAvatar","avatar","onEditProfile","about","onAddPlace","cards","map","key","Footer","ImagePopup","popupOpened","srcLink","cardName","onClose","PopupWithForm","isOpen","id","action","method","noValidate","onSubmit","children","defaultValue","EditProfilePopup","useState","setName","description","setDescription","useEffect","ev","preventDefault","onUpdateUser","onChange","target","value","required","placeholder","pattern","maxLength","minLength","EditAvatarPopup","inputForAvatar","useRef","onUpdateAvatar","current","ref","AddPlacePopup","setLink","basedUrl","Api","this","_token","url","params","fetch","then","result","ok","json","Promise","reject","status","_fetch","headers","authorization","body","JSON","stringify","cardId","likeStatus","BASE_URL","LoginForm","buttonTitle","Register","setEmail","password","setPassword","onRegister","autoComplete","Login","onLogin","InfoTooltip","infoIcon","infoText","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isInfoToolTipOpen","setIsInfoToolTipOpen","selectedCard","setSelectedCard","setCards","setLoggedIn","setCurrentUser","userEmail","setUserEmail","setInfoText","setInfoIcon","history","useHistory","api","handleInfoToolTipOpen","handleCloseAllPopups","handleLogin","checkToken","token","localStorage","getItem","Accept","Authorization","res","Error","err","Auth","data","push","getCardsApi","catch","error","console","getUserInfoApi","Provider","removeItem","exact","path","changeLikeCardStatus","newCard","newCards","cardEl","deleteCardApi","filter","response","SucsessIcon","ErrIcon","message","log","setItem","setUserInfo","setUserAvatar","postCard","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f189e68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ErrIcon.f10ac534.svg\";","module.exports = __webpack_public_path__ + \"static/media/SucsessIcon.e38b395c.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";","import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport headerLogo from '../pictures/logo.svg';\r\n\r\nfunction Header(props) {\r\n  const location = useLocation();\r\n  const link = `${location.pathname === '/sign-in' ? '/sign-up' : '/sign-in'}`;\r\n  const title = `${location.pathname === '/sign-in' ? 'Регистрация' : 'Войти'}`;\r\n\r\n  return (\r\n    <header className='header'>\r\n      <img className='logo' src={headerLogo} alt='Логотип Mesto' />\r\n      {!props.loggedIn && (\r\n        <Link className='header__link link' to={link}>\r\n          {title}\r\n        </Link>\r\n      )}\r\n      {props.loggedIn && (\r\n        <div className='header__nav'>\r\n          <span className='header__email'>{props.email}</span>\r\n          <button className='header__button' onClick={props.onSignOut}>\r\n            Выйти\r\n          </button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n}\r\n \r\nexport default Header;\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nconst ProtectedRoute = ({ component: Component, ...props }) => {\r\n  \r\n  return (\r\n    <Route>\r\n      {() =>\r\n        props.loggedIn ? <Component {...props} /> : <Redirect to='./sign-in' />\r\n      }\r\n    </Route>\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React from \"react\";\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React, { useContext } from 'react';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Card(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  // Определяем, являемся ли мы владельцем текущей карточки\r\n  const isOwn = props.card.owner._id === currentUser._id;\r\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n  const isLiked = props.card.likes.some((el) => el._id === currentUser._id);\r\n  function handleClick() {\r\n    props.onCardClick(props.card);\r\n  }\r\n  function handleLikeClick() {\r\n    props.onCardLike(props.card);\r\n  }\r\n  function handleDeleteClick() {\r\n    props.onCardDelete(props.card);\r\n  }\r\n  // Переменная, задающая css класс кнопки удаления, в зависимости от владения карточкой\r\n  const cardDeleteButtonClassName = `${\r\n    isOwn\r\n      ? 'card__delete-button'\r\n      : 'card__delete-button card__delete-button_hidden'\r\n  }`;\r\n  // Переменная, задающая css класс кнопки лайка, в зависимости от того, поставлен ли уже лайк\r\n  const cardLikeButtonClassName = `${\r\n    isLiked ? 'card__like-button card__like-button_active' : 'card__like-button'\r\n  }`;\r\n\r\n  return (\r\n    <li className='card'>\r\n      <img\r\n        className='card__picture'\r\n        src={props.card.link}\r\n        alt={props.card.name}\r\n        onClick={handleClick}\r\n      />\r\n      <h2 className='card__title'>{props.card.name}</h2>\r\n      <div className='card__like-wrapper'>\r\n        <button\r\n          className={cardLikeButtonClassName}\r\n          type='button'\r\n          onClick={handleLikeClick}\r\n        />\r\n        <p className='card__likes-number'>{props.card.likes.length}</p>\r\n      </div>\r\n      <button\r\n        className={cardDeleteButtonClassName}\r\n        type='button'\r\n        onClick={handleDeleteClick}\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { useContext } from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className='content'>\r\n      <>\r\n        <section className='profile'>\r\n          <div className='profile__avatar-wrapper' onClick={props.onEditAvatar}>\r\n            <img\r\n              className='profile__avatar'\r\n              src={currentUser.avatar}\r\n              alt='Аватар пользователя'\r\n            />\r\n          </div>\r\n          <div className='profile__info'>\r\n            <div className='profile__info-shell'>\r\n              <h1 className='profile__name'>{currentUser.name}</h1>\r\n              <button\r\n                className='profile__edit-button'\r\n                type='button'\r\n                onClick={props.onEditProfile}\r\n              ></button>\r\n            </div>\r\n            <p className='profile__description'>{currentUser.about}</p>\r\n          </div>\r\n          <button\r\n            className='profile__add-button'\r\n            type='button'\r\n            onClick={props.onAddPlace}\r\n          ></button>\r\n        </section>\r\n        <ul className='cards'>\r\n          {props.cards.map((card) => (\r\n            <Card\r\n              card={card}\r\n              key={card._id}\r\n              onCardClick={props.onCardClick}\r\n              onCardLike={props.onCardLike}\r\n              onCardDelete={props.onCardDelete}\r\n            />\r\n          ))}\r\n        </ul>\r\n      </>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className='footer'>\r\n      <p className='footer__copyright'>&copy; 2020 Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup(props) {\r\n  let popupOpened;\r\n  let srcLink;\r\n  let cardName;\r\n  if (props.card) {\r\n    popupOpened = 'popup_opened';\r\n    srcLink = props.card.link;\r\n    cardName = props.card.name;\r\n  }\r\n\r\n  return (\r\n    <section className={`popup popup_for_image ${popupOpened}`}>\r\n      <div className='popup__img-wrapper'>\r\n        <img className='popup__image' src={srcLink} alt='Фото места' />\r\n        <p className='popup__img-title'>{cardName}</p>\r\n        <button\r\n          className='popup__close-button'\r\n          onClick={props.onClose}\r\n        ></button>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default ImagePopup;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n  let isOpen;\r\n  if (props.isOpen) {\r\n    isOpen = 'popup_opened';\r\n  }\r\n  \r\n  return (\r\n    <section className={`popup popup_for_${props.name} ${isOpen}`}>\r\n      <form\r\n        id={`form_for_${props.name}`}\r\n        className='popup__content'\r\n        action='#'\r\n        method='POST'\r\n        noValidate\r\n        onSubmit={props.onSubmit}\r\n      >\r\n        <button\r\n          className='popup__close-button'\r\n          type='button'\r\n          onClick={props.onClose}\r\n        ></button>\r\n        <h2 className='popup__title'>{props.title}</h2>\r\n        <fieldset className='popup__fieldset'>{props.children}</fieldset>\r\n        <button\r\n          className='popup__submit-button '\r\n          type='submit'\r\n          defaultValue='Сохранить'\r\n        >\r\n          Сохранить\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction EditProfilePopup(props) {\r\n  const currentUser = useContext(CurrentUserContext);\r\n  const [name, setName] = useState();\r\n  const [description, setDescription] = useState();\r\n  function handleChangeName(ev) {\r\n    setName(ev.target.value);\r\n  }\r\n  function handleChangeDescription(ev) {\r\n    setDescription(ev.target.value);\r\n  }\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onUpdateUser({\r\n      name: name,\r\n      about: description,\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='Редактировать профиль'\r\n      name='edit'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id='input-name'\r\n        className='popup__input popup__input_name'\r\n        type='text'\r\n        name='name'\r\n        defaultValue={name}\r\n        onChange={handleChangeName}\r\n        required\r\n        placeholder='Имя'\r\n        pattern='[A-Za-zА-Яа-яЁё -]{2,40}'\r\n      />\r\n      <span id='input-name-error' className='popup__input-error-text'>\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n      <input\r\n        id='input-dscr'\r\n        className='popup__input popup__input_description'\r\n        type='text'\r\n        name='info'\r\n        defaultValue={description}\r\n        onChange={handleChangeDescription}\r\n        required\r\n        placeholder='О себе'\r\n        maxLength='200'\r\n        minLength='2'\r\n      />\r\n      <span id='input-dscr-error' className='popup__input-error-text'>\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React, { useRef } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup(props) {\r\n  //Используем хук \"ref\" для доступа к полю ввода\r\n  const inputForAvatar = useRef();\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    // Передаём значение инпута во внешний обработчик\r\n    props.onUpdateAvatar({\r\n      avatar: inputForAvatar.current.value,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='Обновить аватар'\r\n      name='add-avatar'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id='input-avatar-src'\r\n        className='popup__input popup__input_avatar-src'\r\n        type='url'\r\n        ref={inputForAvatar}\r\n        name='avatar'\r\n        defaultValue=''\r\n        required\r\n        placeholder='Ссылка на аватар'\r\n      />\r\n      <span id='input-avatar-src-error' className='popup__input-error-text'>\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React, { useState } from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup(props) {\r\n  const [name, setName] = useState();\r\n  const [link, setLink] = useState();\r\n  function handleChangeName(ev) {\r\n    setName(ev.target.value);\r\n  }\r\n  function handleChangeLink(ev) {\r\n    setLink(ev.target.value);\r\n  }\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    // Передаём значения управляемых компонентов во внешний обработчик\r\n    props.onAddPlace({\r\n      name: name,\r\n      link: link,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm\r\n      title='Новое место'\r\n      name='add-card'\r\n      isOpen={props.isOpen}\r\n      onClose={props.onClose}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      <input\r\n        id='input-place-name'\r\n        className='popup__input popup__input_place-name'\r\n        type='text'\r\n        name='name'\r\n        onChange={handleChangeName}\r\n        defaultValue={name}\r\n        required\r\n        placeholder='Название'\r\n        minLength='1'\r\n        maxLength='30'\r\n      />\r\n      <span id='input-place-name-error' className='popup__input-error-text'>\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n      <input\r\n        id='input-img-src'\r\n        className='popup__input popup__input_img-src'\r\n        type='url'\r\n        name='link'\r\n        onChange={handleChangeLink}\r\n        defaultValue={link}\r\n        required\r\n        placeholder='Ссылка на картинку'\r\n      />\r\n      <span id='input-img-src-error' className='popup__input-error-text'>\r\n        Необходимо заполнить данное поле\r\n      </span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","export const token = \"89e2c3a3-c362-4c73-9168-38bfd7349e7e\";\r\nexport const myCohort = \"cohort-12\";\r\nexport const basedUrl = \"https://mesto.nomoreparties.co/v1\";\r\n","import { token, myCohort, basedUrl } from \"../utils/constants\";\r\n\r\nexport default class Api {\r\n  constructor() {\r\n    this._token = token;\r\n  }\r\n  _fetch(url, params) {\r\n    return fetch(url, params).then((result) => {\r\n      if (result.ok) {\r\n        return result.json();\r\n      }\r\n      return Promise.reject(result.status);\r\n    });\r\n  }\r\n  //Получение информации о массиве карточек\r\n  getCardsApi() {\r\n    return this._fetch(`${basedUrl}/${myCohort}/cards`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    });\r\n  }\r\n  //Получение информации о пользователе\r\n  getUserInfoApi() {\r\n    return this._fetch(`${basedUrl}/${myCohort}/users/me`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    });\r\n  }\r\n  // Метод изменения инфо о юзере\r\n  setUserInfo(body) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  }\r\n  //Метод изменения аватара пользователя\r\n  setUserAvatar(body) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/users/me/avatar`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    });\r\n  }\r\n  //Метод постановки-удалкения лайка\r\n  changeLikeCardStatus(cardId, likeStatus) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/cards/likes/${cardId}`, {\r\n      method: `${likeStatus ? \"PUT\" : \"DELETE\"}`,\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    });\r\n  }\r\n  //Метод удаления карточки\r\n  deleteCardApi(cardId) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/cards/${cardId}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    });\r\n  }\r\n  //Метод отправки формы для добавления каротчки\r\n  postCard(card) {\r\n    return this._fetch(`${basedUrl}/${myCohort}/cards`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        authorization: this._token,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(card),\r\n    });\r\n  }\r\n}\r\n","export const BASE_URL = 'https://auth.nomoreparties.co';\r\n\r\nexport const register = ({ password, email }) => {\r\n  return fetch(`${BASE_URL}/signup`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      password: password,\r\n      email: email,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n\r\nexport const authorize = ({ password, email }) => {\r\n  return fetch(`${BASE_URL}/signin`, {\r\n    method: 'POST',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({\r\n      password: password,\r\n      email: email,\r\n    }),\r\n  })\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((res) => {\r\n      return res;\r\n    });\r\n};\r\n\r\nexport const checkToken = (token) => {\r\n  return fetch(`${BASE_URL}/users/me`, {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  })\r\n    .then((res) => {\r\n      try {\r\n        if (res.status === 200) {\r\n          return res.json();\r\n        }\r\n        if (res.status === 400) {\r\n          throw new Error('Токен не передан или передан не в том формате');\r\n        }\r\n        if (res.status === 401) {\r\n          throw new Error('Переданный токен некорректен');\r\n        }\r\n      } catch (err) {\r\n        return err;\r\n      }\r\n    })\r\n    .then((res) => res);\r\n};\r\n","import React from 'react';\r\n\r\nfunction LoginForm(props) {\r\n  \r\n  return (\r\n    <form\r\n      id='login_form'\r\n      className='login__form'\r\n      action='#'\r\n      method='POST'\r\n      noValidate\r\n      onSubmit={props.onSubmit}\r\n    >\r\n      <div>\r\n        <h2 className='login__title'>{props.title}</h2>\r\n        <fieldset className='login__fieldset'>{props.children}</fieldset>\r\n      </div>\r\n      <button className='login__submit-button ' type='submit'>\r\n        {props.buttonTitle}\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginForm from './LoginForm';\r\n\r\nfunction Register(props) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  function handleChangeEmail(ev) {\r\n    setEmail(ev.target.value);\r\n  }\r\n  function handleChangePassword(ev) {\r\n    setPassword(ev.target.value);\r\n  }\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    props.onRegister({ email, password });\r\n  }\r\n\r\n  return (\r\n    <section className='login'>\r\n      <LoginForm\r\n        onSubmit={handleSubmit}\r\n        title='Регистрация'\r\n        buttonTitle='Зарегистрироваться'\r\n      >\r\n        <input\r\n          id='input-email'\r\n          className='login__input login__input_email'\r\n          type='text'\r\n          name='email'\r\n          autoComplete='email'\r\n          defaultValue={email}\r\n          onChange={handleChangeEmail}\r\n          required\r\n          placeholder='Email'\r\n          pattern='/[.a-z0-9_-]+@[а-яА-Яa-z0-9-]+\\.[а-яА-Яa-zA-Z]/i'\r\n        />\r\n        <input\r\n          id='input-password'\r\n          className='login__input login__input_password'\r\n          type='password'\r\n          name='password'\r\n          autoComplete='current-password'\r\n          defaultValue={password}\r\n          onChange={handleChangePassword}\r\n          required\r\n          placeholder='Пароль'\r\n          maxLength='20'\r\n          minLength='6'\r\n        />\r\n      </LoginForm>\r\n      <div className='login__signing'>\r\n        <p className='login__sign'>Уже зарегистрированы?&nbsp;</p>\r\n        <Link className='login__link' to='/sign-in'>\r\n          Войти\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginForm from './LoginForm';\r\n\r\nfunction Login(props) {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  function handleChangeEmail(ev) {\r\n    setEmail(ev.target.value);\r\n  }\r\n  function handleChangePassword(ev) {\r\n    setPassword(ev.target.value);\r\n  }\r\n  function handleSubmit(ev) {\r\n    ev.preventDefault();\r\n    props.onLogin({ email, password });\r\n    \r\n  }\r\n\r\n  return (\r\n    <section className='login'>\r\n      <LoginForm onSubmit={handleSubmit} title='Вход' buttonTitle='Войти'>\r\n        <input\r\n          id='input-email'\r\n          className='login__input login__input_email'\r\n          type='text'\r\n          name='email'\r\n          autoComplete='email'\r\n          defaultValue={email}\r\n          onChange={handleChangeEmail}\r\n          required\r\n          placeholder='Email'\r\n          pattern='/[.a-z0-9_-]+@[а-яА-Яa-z0-9-]+\\.[а-яА-Яa-zA-Z]/i'\r\n        />\r\n        <input\r\n          id='input-password'\r\n          className='login__input login__input_password'\r\n          type='password'\r\n          name='password'\r\n          autoComplete='current-password'\r\n          defaultValue={password}\r\n          onChange={handleChangePassword}\r\n          required\r\n          placeholder='Пароль'\r\n          maxLength='20'\r\n          minLength='6'\r\n        />\r\n      </LoginForm>\r\n      <div className='login__signing'>\r\n        <p className='login__sign'>Еще не зарегистрированы?&nbsp;</p>\r\n        <Link className='login__link' to='/sign-up'>\r\n          Регистрация\r\n        </Link>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nfunction InfoTooltip(props) {\r\n  let popupOpened = null;\r\n  \r\n  if (props.isOpen) {\r\n    popupOpened = 'popup_opened';\r\n  }\r\n  function haldleCloseTip() {\r\n    props.onClose();\r\n    popupOpened = null;\r\n  }\r\n  return (\r\n    <section className={`popup popup_for_info-tool-tip ${popupOpened}`}>\r\n      {popupOpened && (\r\n        <div className='popup__content popup__info-tool-tip-content'>\r\n          <img\r\n            className='popup__info-tool-tip-icon'\r\n            src={props.infoIcon}\r\n            alt='Иконка'\r\n          />\r\n          <p className='popup__info-tool-tip-text'>{props.infoText}</p>\r\n          <button\r\n            className='popup__close-button'\r\n            onClick={haldleCloseTip}\r\n          ></button>\r\n        </div>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default InfoTooltip;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, useHistory } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport ProtectedRoute from './ProtectedRoute';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport Api from '../utils/Api';\r\nimport * as Auth from '../utils/auth';\r\nimport Register from './Register';\r\nimport Login from './Login';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport SucsessIcon from '../pictures/SucsessIcon.svg';\r\nimport ErrIcon from '../pictures/ErrIcon.svg';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\nfunction App() {\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isInfoToolTipOpen, setIsInfoToolTipOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState();\r\n  const [cards, setCards] = useState([]);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [userEmail, setUserEmail] = useState();\r\n  const [infoText, setInfoText] = useState('');\r\n  const [infoIcon, setInfoIcon] = useState();\r\n  const history = useHistory();\r\n  const api = new Api();\r\n  // Метод для выбора текущей карточки\r\n  function handleCardClick(card) {\r\n    setSelectedCard(card);\r\n  }\r\n  // Метод постановки-удаления лайка\r\n  function handleCardLike(card) {\r\n    //Проверяем, есть ли уже лайк на этой карточке\r\n    const isLiked = card.likes.some((el) => el._id === currentUser._id);\r\n    //Отправляем запрос в API и получаем обновлённые данные карточки\r\n    api\r\n      .changeLikeCardStatus(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        //Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n        const newCards = cards.map((cardEl) =>\r\n          cardEl._id === card._id ? newCard : cardEl\r\n        );\r\n        //Обновляем стейт\r\n        setCards(newCards);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  // Метод удаления карточки\r\n  function handleCardDelete(card) {\r\n    //Отправляем запрос в API данные удаляемой карточки\r\n    api\r\n      .deleteCardApi(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((cardEl) => card._id !== cardEl._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  // Метод сабмита формы добавления карточки\r\n  function handleAddPlaceSubmit(card) {\r\n    api\r\n      .postCard(card)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n      })\r\n      .then(() => {\r\n        handleCloseAllPopups();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  // Методы открытия всплывающих окон\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true);\r\n  }\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n  function handleInfoToolTipOpen() {\r\n    setIsInfoToolTipOpen(true);\r\n  }\r\n  // Метод закрытия всплывающих окон\r\n  function handleCloseAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsInfoToolTipOpen(false);\r\n    setSelectedCard();\r\n  }\r\n  //Обновление информации о пользователе\r\n  function handleUpdateUser(body) {\r\n    api\r\n      .setUserInfo(body)\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n      })\r\n      .then(() => {\r\n        handleCloseAllPopups();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  //Обновление аватара\r\n  function handleUpdateAvatar(body) {\r\n    api\r\n      .setUserAvatar(body)\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n      })\r\n      .then(() => {\r\n        handleCloseAllPopups();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }\r\n  //Методы для регистрации и аутентификаци\r\n  //Установка переменной \"Лог-ин\"\r\n  function handleLogin() {\r\n    setLoggedIn(true);\r\n  }\r\n  //Выход из аккаунта\r\n  function onSignOut() {\r\n    setLoggedIn(false);\r\n    localStorage.removeItem('token');\r\n    history.push('/sign-in');\r\n  }\r\n  // Авторизация пользователя\r\n  function onLogin({ email, password }) {\r\n    Auth.authorize({ email, password })\r\n      .then((res) => {\r\n        if (res.token) {\r\n          localStorage.setItem('token', res.token);\r\n          setUserEmail(email);\r\n          handleLogin();\r\n          history.push('/');\r\n          setInfoText('Вход выполнен!');\r\n          setInfoIcon(SucsessIcon);\r\n        }\r\n        if (res.message) {\r\n          setInfoText(\r\n            `Что-то пошло не так! Попробуйте ещё раз. ${res.message}`\r\n          );\r\n          setInfoIcon(ErrIcon);\r\n        }\r\n      })\r\n      .then(() => {\r\n        handleInfoToolTipOpen();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }\r\n  // Регистрация пользователя\r\n  function onRegister({ email, password }) {\r\n    Auth.register({ email, password })\r\n      .then((res) => {\r\n        if (res.data) {\r\n          history.push('/sign-in');\r\n          setInfoText('Вы успешно зарегистрировались!');\r\n          setInfoIcon(SucsessIcon);\r\n        }\r\n        if (res.error) {\r\n          setInfoText(`Что-то пошло не так! Попробуйте ещё раз. ${res.error}`);\r\n          setInfoIcon(ErrIcon);\r\n        }\r\n        if (res.message) {\r\n          setInfoText(\r\n            `Что-то пошло не так! Попробуйте ещё раз. ${res.message}`\r\n          );\r\n          setInfoIcon(ErrIcon);\r\n        }\r\n      })\r\n      .then(() => {\r\n        handleInfoToolTipOpen();\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  // Метод проверки токена на наличие (если есть - переход на основную страницу)\r\n  function checkToken() {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      Auth.checkToken(token).then((res) => {\r\n        if (res) {\r\n          setUserEmail(res.data.email);\r\n          handleLogin();\r\n          history.push('/');\r\n        }\r\n      });\r\n    }\r\n  }\r\n  // Запрос на получение карточек при загрузке страницы\r\n  useEffect(() => {\r\n    api\r\n      .getCardsApi()\r\n      .then((result) => {\r\n        setCards(result);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // Запрос на получение информации о юзере при загрузке страницы\r\n  useEffect(() => {\r\n    api\r\n      .getUserInfoApi()\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  // Проверка токена при загрузке страницы\r\n  useEffect(() => {\r\n    checkToken();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [localStorage]);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className='page'>\r\n        <Header loggedIn={loggedIn} email={userEmail} onSignOut={onSignOut} />\r\n        <Switch>\r\n          <ProtectedRoute\r\n            exact\r\n            path='/'\r\n            component={Main}\r\n            onEditProfile={handleEditProfileClick}\r\n            onAddPlace={handleAddPlaceClick}\r\n            onEditAvatar={handleEditAvatarClick}\r\n            onCardClick={handleCardClick}\r\n            cards={cards}\r\n            onCardLike={handleCardLike}\r\n            onCardDelete={handleCardDelete}\r\n            loggedIn={loggedIn}\r\n          />\r\n          <Route path='/sign-up'>\r\n            <Register onRegister={onRegister} />\r\n          </Route>\r\n          <Route path='/sign-in'>\r\n            <Login onLogin={onLogin} />\r\n          </Route>\r\n        </Switch>\r\n        <Footer />\r\n        <EditProfilePopup\r\n          isOpen={isEditProfilePopupOpen}\r\n          onClose={handleCloseAllPopups}\r\n          onUpdateUser={handleUpdateUser}\r\n        />\r\n        <EditAvatarPopup\r\n          isOpen={isEditAvatarPopupOpen}\r\n          onClose={handleCloseAllPopups}\r\n          onUpdateAvatar={handleUpdateAvatar}\r\n        />\r\n        <AddPlacePopup\r\n          isOpen={isAddPlacePopupOpen}\r\n          onClose={handleCloseAllPopups}\r\n          onAddPlace={handleAddPlaceSubmit}\r\n        />\r\n        <ImagePopup card={selectedCard} onClose={handleCloseAllPopups} />\r\n        <InfoTooltip\r\n          onClose={handleCloseAllPopups}\r\n          isOpen={isInfoToolTipOpen}\r\n          loggedIn={loggedIn}\r\n          infoText={infoText}\r\n          infoIcon={infoIcon}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}